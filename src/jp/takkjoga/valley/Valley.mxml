<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:valley="jp.takkjoga.valley.components.*" width="600" height="400" initialize="init(event);">
    <mx:Script>
    <![CDATA[
        import flash.net.*;
        import flash.events.*;
        import mx.controls.dataGridClasses.DataGridColumn;
        import mx.controls.Alert;
        import jp.takkjoga.valley.Model.*;
        import jp.takkjoga.valley.SQLParser;

        private var gateway:String = "http://localhost:8002/server.php";
        private var loader:URLLoader;

        private function init(event:Event):void
        {
            trace("init");
            queryForm.submitButton.addEventListener(MouseEvent.CLICK, connect);
        }

        private function connect(event:MouseEvent):void
        {
            loader = new URLLoader();
            loader.addEventListener(Event.COMPLETE, onComplete);
            loader.addEventListener(IOErrorEvent.IO_ERROR, onIOError);
            loader.addEventListener(SecurityErrorEvent.SECURITY_ERROR, onSecurityError);

            var variables:URLVariables = new URLVariables();
            var statementText:String = queryForm.statement.text;
            trace(statementText);
            variables.q = statementText;

            var parser:SQLParser = new SQLParser();
            parser.parse(statementText);
            analyzedText.htmlText = parser.parsedStatement;

            var request:URLRequest = new URLRequest(gateway);
            request.method = URLRequestMethod.GET;
            request.data = variables;

            try {
                loader.load(request);
            } catch (error:Error) {
                trace("connect failed");
            }
        }

        public function onComplete(event:Event):void
        {
            loader = URLLoader(event.target);
            trace("on complete");
            var result:XML = new XML(loader.data);

            if (result == '') {
                Alert.show("responce is empty");
            } else if (result.status == 'ng') {
                Alert.show(result.message);
            } else if (result.rows.attribute('count') == 0) {
                Alert.show("result count is zero");
            } else {
                var columns:Array = new Array();
                var row:XML = result.rows.elements()[0];
                for (var i:int = 0; i < row.elements().length(); i ++) {
                    var dataGridColumn:DataGridColumn = new DataGridColumn();
                    var fieldName:String = row.elements()[i].name();
                    dataGridColumn.headerText = fieldName;
                    dataGridColumn.dataField = fieldName;
                    columns.push(dataGridColumn);
                }
                previewTable.columns = columns;
                previewTable.dataProvider = row;
            }
        }

        public function onIOError(event:IOErrorEvent):void
        {
            trace("io error");
        }

        public function onSecurityError(event:SecurityErrorEvent):void
        {
            trace("security error");
        }
    ]]>
    </mx:Script>

    <mx:VBox>
        <valley:QueryForm id="queryForm" width="100%" height="100%"/>
        <mx:Text id="analyzedText" />
        <valley:Table id="previewTable" width="300" height="200"/>
    </mx:VBox>
</mx:Application>
